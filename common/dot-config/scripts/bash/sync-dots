#!/bin/bash

set -euo pipefail

show_usage() {
	echo "Usage: $0 [mainstation|travelstation] (-v)"
	echo "  mainstation  - Sync desktop dotfiles"
	echo "  travelstation  - Sync laptop dotfiles"
	echo "  (-v)  - verbose Stow output"
	exit 1
}

get_commit_msg() {
	while true; do
		read -rp "Please enter a commit message: " COMMIT_MSG
		if [ -n "$COMMIT_MSG" ]; then
			break
		fi
		echo "Commit message required"
	done
}

if [ $# -eq 0 ]; then
	echo "No machine type specified."
	echo ""
	show_usage
elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
	show_usage
elif [ "$1" = "mainstation" ] || [ "$1" = "travelstation" ]; then
	MACHINE_TYPE="$1"
else
	echo "Error: Invalid Option '$1'"
	show_usage
fi

if [ -z "${dots:-}" ]; then
	echo "Error!: 'dots' env var is not set. Check possible areas causing issue:"
	echo "  - ~/.zprofile"
	echo "  - ~/.zshrc"
	echo "  - ~/.config/shell/vars"
	exit 1
fi

echo "<=== Syncing dotfiles ===>"

cd "$dots"

read -rp "Perform Git operations? (y/n): " GIT_CONFIRM
if [[ "$GIT_CONFIRM" =~ ^([yY]|[yY][eE][sS])$ ]]; then
	git fetch origin main

	LOCAL_GIT=$(git rev-parse @ 2>/dev/null)
	REMOTE_GIT=$(git rev-parse @\{u\} 2>/dev/null)
	BASE_GIT=$(git merge-base @ @\{u\} 2>/dev/null)

	echo "LOCAL_GIT = $LOCAL_GIT"
	echo "REMOTE_GIT = $REMOTE_GIT"
	echo "BASE_GIT = $BASE_GIT"

	if [ -z "$LOCAL_GIT" ] || [ -z "$REMOTE_GIT" ] || [ -z "$BASE_GIT" ]; then
		echo "Error: Could not determine Git hashes. Is the upstream set correctly?"
		exit 1
	fi

	if [ "$LOCAL_GIT" = "$REMOTE_GIT" ]; then
		echo "Local and remote repositories in sync."
	elif [ "$LOCAL_GIT" = "$BASE_GIT" ]; then
		echo "Remote has updates, commencing pull..."
		git pull --rebase
	elif [ "$REMOTE_GIT" = "$BASE_GIT" ]; then
		echo "Local has updates that need to be pushed."
	else
		echo "Local and remote have diverged. Manual intervention may be required."
	fi

	if [ -n "$(git status --porcelain)" ]; then
		echo "Found local changes to commit and push..."
		echo "Please review 'git status' and 'git diff' first:"
		sleep 1

		git status
		read -rp "Continue? (y/n): " STATUS_CONFIRM
		[[ "$STATUS_CONFIRM" =~ ^([yY]|[yY][eE][sS])$ ]] || exit 1
		sleep 1

		git diff
		read -rp "Continue? (y/n): " DIFF_CONFIRM
		[[ "$DIFF_CONFIRM" =~ ^([yY]|[yY][eE][sS])$ ]] || exit 1
		get_commit_msg
		git add .
		git commit -m "$COMMIT_MSG"
		git push
	else
		echo "Nothing to commit and push."
	fi
fi

if [ "${2:-}" = "-v" ] || [ "${2:-}" = "-V" ]; then
	stow -v -t "$HOME" -R common --dotfiles --adopt
	stow -v -t "$HOME" -R "$MACHINE_TYPE" --dotfiles --adopt
else
	stow -t "$HOME" -R common --dotfiles --adopt
	stow -t "$HOME" -R "$MACHINE_TYPE" --dotfiles --adopt
	echo "GNU Stow operations complete."
fi

echo "<=== Dotfiles synced ===>"
