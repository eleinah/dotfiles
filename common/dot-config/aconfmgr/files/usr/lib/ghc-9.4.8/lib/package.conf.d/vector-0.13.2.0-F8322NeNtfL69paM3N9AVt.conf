name:                 vector
version:              0.13.2.0
visibility:           public
id:                   vector-0.13.2.0-F8322NeNtfL69paM3N9AVt
key:                  vector-0.13.2.0-F8322NeNtfL69paM3N9AVt
license:              BSD-3-Clause
copyright:
    (c) Roman Leshchinskiy 2008-2012,
        Alexey Kuleshevich 2020-2022,
        Aleksey Khudyakov 2020-2022,
        Andrew Lelechenko 2020-2022

maintainer:
    Haskell Libraries Team <libraries@haskell.org>
    Alexey Kuleshevich <alexey@kuleshevi.ch>,
    Aleksey Khudyakov <alexey.skladnoy@gmail.com>,
    Andrew Lelechenko <andrew.lelechenko@gmail.com>

author:               Roman Leshchinskiy <rl@cse.unsw.edu.au>
homepage:             https://github.com/haskell/vector
synopsis:             Efficient Arrays
description:
    .
    An efficient implementation of @Int@-indexed arrays (both mutable
    and immutable), with a powerful loop optimisation framework .
    .
    It is structured as follows:
    .
    ["Data.Vector"] Boxed vectors of arbitrary types.
    .
    ["Data.Vector.Unboxed"] Unboxed vectors with an adaptive
    representation based on data type families.
    .
    ["Data.Vector.Storable"] Unboxed vectors of 'Storable' types.
    .
    ["Data.Vector.Primitive"] Unboxed vectors of primitive types as
    defined by the @primitive@ package. "Data.Vector.Unboxed" is more
    flexible at no performance cost.
    .
    ["Data.Vector.Generic"] Generic interface to the vector types.
    .
    There is also a (draft) tutorial on common uses of vector.
    .
    * <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>

category:             Data, Data Structures
abi:                  9e0ea7f2521f75fd7b5f559058ee7067
exposed:              True
exposed-modules:
    Data.Vector Data.Vector.Fusion.Bundle
    Data.Vector.Fusion.Bundle.Monadic Data.Vector.Fusion.Bundle.Size
    Data.Vector.Fusion.Stream.Monadic Data.Vector.Fusion.Util
    Data.Vector.Generic Data.Vector.Generic.Base
    Data.Vector.Generic.Mutable Data.Vector.Generic.Mutable.Base
    Data.Vector.Generic.New Data.Vector.Internal.Check
    Data.Vector.Mutable Data.Vector.Primitive
    Data.Vector.Primitive.Mutable Data.Vector.Storable
    Data.Vector.Storable.Internal Data.Vector.Storable.Mutable
    Data.Vector.Strict Data.Vector.Strict.Mutable Data.Vector.Unboxed
    Data.Vector.Unboxed.Base Data.Vector.Unboxed.Mutable

import-dirs:          /usr/lib/ghc-9.4.8/site-local/vector-0.13.2.0
library-dirs:         /usr/lib/ghc-9.4.8/site-local/vector-0.13.2.0
library-dirs-static:  /usr/lib/ghc-9.4.8/site-local/vector-0.13.2.0
dynamic-library-dirs: /usr/lib
data-dir:             /usr/share/haskell-vector
hs-libraries:         HSvector-0.13.2.0-F8322NeNtfL69paM3N9AVt
include-dirs:         /usr/lib/ghc-9.4.8/site-local/vector-0.13.2.0/include
depends:
    base-4.17.2.1 deepseq-1.4.8.0
    primitive-0.8.0.0-5TU9coTCbFAF1LmcqkQLR6
    vector-stream-0.1.0.1-F03bfhC0HhqL26lQDSs4vb

haddock-interfaces:   /usr/share/doc/haskell-vector/html/vector.haddock
haddock-html:         /usr/share/doc/haskell-vector/html
